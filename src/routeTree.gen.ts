/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppNotesNoteIdImport } from './routes/_app/notes.$noteId'

// Create Virtual Routes

const AppStudioLazyImport = createFileRoute('/_app/studio')()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppStudioLazyRoute = AppStudioLazyImport.update({
  id: '/studio',
  path: '/studio',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/studio.lazy').then((d) => d.Route))

const AppNotesNoteIdRoute = AppNotesNoteIdImport.update({
  id: '/notes/$noteId',
  path: '/notes/$noteId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/studio': {
      id: '/_app/studio'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof AppStudioLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/notes/$noteId': {
      id: '/_app/notes/$noteId'
      path: '/notes/$noteId'
      fullPath: '/notes/$noteId'
      preLoaderRoute: typeof AppNotesNoteIdImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppStudioLazyRoute: typeof AppStudioLazyRoute
  AppIndexRoute: typeof AppIndexRoute
  AppNotesNoteIdRoute: typeof AppNotesNoteIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppStudioLazyRoute: AppStudioLazyRoute,
  AppIndexRoute: AppIndexRoute,
  AppNotesNoteIdRoute: AppNotesNoteIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/studio': typeof AppStudioLazyRoute
  '/': typeof AppIndexRoute
  '/notes/$noteId': typeof AppNotesNoteIdRoute
}

export interface FileRoutesByTo {
  '/studio': typeof AppStudioLazyRoute
  '/': typeof AppIndexRoute
  '/notes/$noteId': typeof AppNotesNoteIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/studio': typeof AppStudioLazyRoute
  '/_app/': typeof AppIndexRoute
  '/_app/notes/$noteId': typeof AppNotesNoteIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/studio' | '/' | '/notes/$noteId'
  fileRoutesByTo: FileRoutesByTo
  to: '/studio' | '/' | '/notes/$noteId'
  id: '__root__' | '/_app' | '/_app/studio' | '/_app/' | '/_app/notes/$noteId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/studio",
        "/_app/",
        "/_app/notes/$noteId"
      ]
    },
    "/_app/studio": {
      "filePath": "_app/studio.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/notes/$noteId": {
      "filePath": "_app/notes.$noteId.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
