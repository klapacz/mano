@import "tailwindcss";

@import "tw-animate-css";
@plugin '@tailwindcss/typography';

@custom-variant dark (&:is(.dark *));

@theme inline {
  --spacing-mobile-nav: var(--mobile-nav-height);

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --color-link-foreground: var(--link-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --color-sidebar: var(--sidebar-background);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

:root {
  --mobile-nav-height: --spacing(17);

  --background: hsl(0 0% 100%);
  --foreground: hsl(240 10% 3.9%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(240 10% 3.9%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(240 10% 3.9%);
  --primary: hsl(240 5.9% 10%);
  --primary-foreground: hsl(0 0% 98%);
  --secondary: hsl(240 4.8% 95.9%);
  --secondary-foreground: hsl(240 5.9% 10%);
  --muted: hsl(240 4.8% 95.9%);
  --muted-foreground: hsl(240 3.8% 46.1%);
  --accent: hsl(240 4.8% 95.9%);
  --accent-foreground: hsl(240 5.9% 10%);
  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(240 5.9% 90%);
  --input: hsl(240 5.9% 90%);
  --ring: hsl(240 5.9% 10%);
  --radius: 0.5rem;
  --chart-1: hsl(12 76% 61%);
  --chart-2: hsl(173 58% 39%);
  --chart-3: hsl(197 37% 24%);
  --chart-4: hsl(43 74% 66%);
  --chart-5: hsl(27 87% 67%);
  --sidebar-background: hsl(0 0% 98%);
  --sidebar-foreground: hsl(240 5.3% 26.1%);
  --sidebar-primary: hsl(240 5.9% 10%);
  --sidebar-primary-foreground: hsl(0 0% 98%);
  --sidebar-accent: hsl(240 4.8% 95.9%);
  --sidebar-accent-foreground: hsl(240 5.9% 10%);
  --sidebar-border: hsl(220 13% 91%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);

  --link-foreground: hsl(230 77% 58%); /* Blue 600 */
}

.dark {
  --background: hsl(240 10% 3.9%);
  --foreground: hsl(0 0% 98%);
  --card: hsl(240 10% 3.9%);
  --card-foreground: hsl(0 0% 98%);
  --popover: hsl(240 10% 3.9%);
  --popover-foreground: hsl(0 0% 98%);
  --primary: hsl(0 0% 98%);
  --primary-foreground: hsl(240 5.9% 10%);
  --secondary: hsl(240 3.7% 15.9%);
  --secondary-foreground: hsl(0 0% 98%);
  --muted: hsl(240 3.7% 15.9%);
  --muted-foreground: hsl(240 5% 64.9%);
  --accent: hsl(240 3.7% 15.9%);
  --accent-foreground: hsl(0 0% 98%);
  --destructive: hsl(0 62.8% 30.6%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(240 3.7% 15.9%);
  --input: hsl(240 3.7% 15.9%);
  --ring: hsl(240 4.9% 83.9%);
  --chart-1: hsl(220 70% 50%);
  --chart-2: hsl(160 60% 45%);
  --chart-3: hsl(30 80% 55%);
  --chart-4: hsl(280 65% 60%);
  --chart-5: hsl(340 75% 55%);
  --sidebar-background: hsl(240 5.9% 10%);
  --sidebar-foreground: hsl(240 4.8% 95.9%);
  --sidebar-primary: hsl(224.3 76.3% 48%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(240 3.7% 15.9%);
  --sidebar-accent-foreground: hsl(240 4.8% 95.9%);
  --sidebar-border: hsl(240 3.7% 15.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);

  --link-foreground: hsl(219 88% 71%); /* blue-500 */
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.tiptap-editor {
  color: hsl(var(--foreground));

  p {
    @apply mb-4;
  }

  h1 {
    @apply text-2xl font-medium mb-5;
  }

  .backlink {
    color: hsl(var(--link-foreground));
  }

  .prosemirror-flat-list {
    & {
      @apply p-0 m-0 relative list-item list-none;
      margin-left: 21px;
    }

    &.ProseMirror-selectednode {
      outline: none;

      &:after {
        content: "";
        position: absolute;
        left: -32px;
        right: -2px;
        top: -2px;
        bottom: -2px;
        border: 2px solid #8cf;
        pointer-events: none;
      }
    }

    &[data-list-kind="ordered"] {
      /*
      Ensure that the counters in children don't escape, so that the sub lists
      won't affect the counter of the parent list.

      See also https://github.com/ocavue/prosemirror-flat-list/issues/23
      */
      & > * {
        contain: style;
      }

      &::before {
        position: absolute;
        right: 100%;
        font-variant-numeric: tabular-nums;
        content: counter(prosemirror-flat-list-counter, decimal) ". ";
      }

      counter-increment: prosemirror-flat-list-counter;

      /*
      Reset the counter for the first list node in the sequence.
      */
      &:first-child,
      :not(&) + & {
        counter-reset: prosemirror-flat-list-counter;

        /*
        If the first list node has a custom order number, set the counter to that value.
        */
        &[data-list-order] {
          @supports (counter-set: prosemirror-flat-list-counter 1) {
            counter-set: prosemirror-flat-list-counter
              var(--prosemirror-flat-list-order);
          }

          /*
          Safari older than version 17.2 doesn't support `counter-set`
          */
          @supports not (counter-set: prosemirror-flat-list-counter 1) {
            counter-increment: prosemirror-flat-list-counter
              var(--prosemirror-flat-list-order);
          }
        }
      }
    }

    &[data-list-kind="task"] {
      & > .list-marker {
        position: absolute;
        right: 100%;
        text-align: center;
        width: 1.5em;
        width: 1lh;

        &,
        & * {
          cursor: pointer;
        }
      }
    }

    &[data-list-kind="bullet"] {
      & > .list-marker {
        position: absolute;
        right: 100%;
        text-align: center;
        width: 1.5em;
        width: 1lh;
      }

      & > .list-marker::before {
        content: "\23F7"; /* Black Medium Down-Pointing Triangle */
      }
      &[data-list-collapsable][data-list-collapsed] > .list-marker::before {
        content: "\23F5"; /* Black Medium Right-Pointing Triangle */
      }

      &[data-list-collapsable] > .list-marker {
        cursor: pointer;
      }
      &:not([data-list-collapsable]) > .list-marker {
        opacity: 40%;
        pointer-events: none;
      }

      /* If collapsed, hide the second and futher children */
      &[data-list-collapsable][data-list-collapsed]
        > .list-content
        > *:nth-child(n + 2) {
        display: none;
      }
    }
  }
}
